name: test
on:
  pull_request:
  push: 
    branches: 
      - main
defaults:
  run:
    shell: bash

jobs:
  dependents:
    runs-on: ubuntu-latest
    container: swift:5.4-focal
    strategy:
      fail-fast: false
      matrix:
        dependent:
          - sqlite-kit
          - fluent-sqlite-driver
    steps:
      - name: Install dependencies
        run: apt-get -q update && apt-get -q install -y libsqlite3-dev
      - name: Check out SQLiteNIO
        uses: actions/checkout@v2
        with:
          path: sqlite-nio
      - name: Check out dependent
        uses: actions/checkout@v2
        with:
          repository: vapor/${{ matrix.dependent }}
          path: dependent
      - name: Use local SQLiteNIO
        run: swift package edit sqlite-nio --path ../sqlite-nio
        working-directory: dependent
      - name: Run tests with Thread Sanitizer
        run: swift test --enable-test-discovery --sanitize=thread
        working-directory: dependent
  linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        image:
          - swift:5.2-focal
          - swift:5.2-amazonlinux2
          - swift:5.3-focal
          - swift:5.3-amazonlinux2
          - swift:5.4-focal
          - swift:5.4-amazonlinux2
          - swiftlang/swift:nightly-5.5-focal
          - swiftlang/swift:nightly-5.5-amazonlinux2
    container: ${{ matrix.image }}
    steps:
      - name: Install Ubuntu dependencies
        run: apt-get -q update && apt-get -q install -y libsqlite3-dev
        if: ${{ endsWith(matrix.image, 'bionic') || endsWith(matrix.image, 'focal') }}
      - name: Update AmazonLinux2's too-old SQLite and compensate for its Postgres
        if: ${{ endsWith(matrix.image, 'amazonlinux2') }}
        working-directory: /root
        # Cribbed from the Fedora RPM, leaves out a lot. System's Tcl is too old to run SQLite's tests.
        run: |
          yum install -y sqlite-devel
          yum install -y file tcl-devel make
          curl -L 'https://www.sqlite.org/src/tarball/sqlite.tar.gz?r=release' | tar xz && cd sqlite
          export CFLAGS="-DSQLITE_DISABLE_DIRSYNC=1 -DSQLITE_SECURE_DELETE=1"
          ./configure --prefix=/usr --libdir=/usr/lib64 --enable-fts3 --enable-all --with-tcl=/usr/lib64
          make all install
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run tests with Thread Sanitizer
        run: swift test --enable-test-discovery --sanitize=thread
  macos:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        xcode:
          - latest
          - latest-stable
    steps:
      - name: Select latest available Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ matrix.xcode }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run tests with Thread Sanitizer
        run: swift test --enable-test-discovery --sanitize=thread
